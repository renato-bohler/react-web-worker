(this["webpackJsonpreact-web-worker"]=this["webpackJsonpreact-web-worker"]||[]).push([[0],{13:function(e,t,n){},14:function(e,t,n){},15:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),s=n(4),o=n.n(s),i=(n(13),n(1)),u=n(2),c=n(6),l=n(5),d=n(7),p=(n(14),function(){function e(){Object(i.a)(this,e),this.thread=function(){var e=function(){self.state+=1},t=function(){return self.requestAnimationFrame((function(){return postMessage(self.state)}))};self.addEventListener("message",(function(n){var a=n.data,r=a.command,s=a.initial;switch(r){case"start":void 0!==s&&(self.state=s),self.workInterval=setInterval(e),self.updateInterval=setInterval(t);break;case"pause":case"stop":"stop"===r&&(self.state=0),clearInterval(self.workInterval),clearInterval(self.updateInterval),postMessage(self.state)}}))},this.reset()}return Object(u.a)(e,[{key:"reset",value:function(){var e=this.thread.toString(),t=new Blob(["(".concat(e,")()")]);this.worker=new Worker(URL.createObjectURL(t)),this.runState="stopped"}},{key:"addCallback",value:function(e){return this.worker.addEventListener("message",e)}},{key:"removeCallback",value:function(e){return this.worker.removeEventListener("message",e)}},{key:"start",value:function(e){this.worker.postMessage({command:"start",initial:e}),this.runState="started"}},{key:"pause",value:function(){this.worker.postMessage({command:"pause"}),this.runState="paused"}},{key:"stop",value:function(){this.worker.postMessage({command:"stop"}),this.runState="stopped"}},{key:"isRunning",value:function(){return"started"===this.runState}},{key:"isPaused",value:function(){return"paused"===this.runState}},{key:"isStopped",value:function(){return"stopped"===this.runState}}]),e}()),k=function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(c.a)(this,Object(l.a)(t).call(this,e))).state={count:0},n.worker=new p,n}return Object(d.a)(t,e),Object(u.a)(t,[{key:"componentDidMount",value:function(){var e=this;this.worker.addCallback((function(t){console.log("[REACT] Callback received:",t.data),e.setState({count:t.data})})),this.worker.stop()}},{key:"render",value:function(){var e=this,t=this.state.count;return console.timeEnd("Render"),console.time("Render"),console.log("[REACT] Rendering...",{props:this.props,state:this.state}),r.a.createElement("div",{className:"App"},r.a.createElement("main",null,r.a.createElement("header",null,r.a.createElement("p",null,"This countup is being executed by a Web Worker."),r.a.createElement("p",null,"It counts to infinity and synchronizes it before every browser render.")),r.a.createElement("p",null,t),r.a.createElement("button",{type:"button",onClick:function(){return e.worker.start()},disabled:this.worker.isRunning()},"Start"),r.a.createElement("button",{type:"button",onClick:function(){return e.worker.pause()},disabled:!this.worker.isRunning()},"Pause"),r.a.createElement("button",{type:"button",onClick:function(){return e.worker.stop()},disabled:this.worker.isStopped()},"Stop")))}}]),t}(r.a.Component);o.a.render(r.a.createElement(k,null),document.getElementById("root"))},8:function(e,t,n){e.exports=n(15)}},[[8,1,2]]]);
//# sourceMappingURL=main.9e57f871.chunk.js.map